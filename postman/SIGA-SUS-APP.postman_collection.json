{
	"info": {
		"_postman_id": "siga-sus-collection-id",
		"name": "SIGA-SUS-APP - Sistema de Triagem Hospitalar",
		"description": "Collection completa para testar todos os endpoints da aplica√ß√£o SIGA-SUS-APP\n\n## üè• Sobre a Aplica√ß√£o\nSistema Integrado de Gest√£o e An√°lise do SUS - Aplica√ß√£o de Triagem Hospitalar com IA\n\n## üöÄ Como usar:\n1. Configure as vari√°veis de ambiente\n2. Execute o registro de usu√°rio\n3. Fa√ßa login para obter o token JWT\n4. Use o token nos endpoints protegidos\n5. Teste a an√°lise de triagem\n\n## üîê Autentica√ß√£o\nTodos os endpoints protegidos requerem token JWT no header:\n`Authorization: Bearer {{jwt_token}}`",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "siga-sus-exporter"
	},
	"item": [
		{
			"name": "üîê Autentica√ß√£o",
			"item": [
				{
					"name": "Registrar Usu√°rio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.test('Usu√°rio registrado com sucesso', function () {",
									"        pm.expect(response.username).to.not.be.undefined;",
									"    });",
									"    console.log('‚úÖ Usu√°rio registrado:', response.username);",
									"} else {",
									"    console.log('‚ùå Erro no registro:', pm.response.text());",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Dr. Jo√£o Silva\",\n    \"username\": \"joao.silva\",\n    \"password\": \"senha123\",\n    \"role\": \"DOCTOR\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Registra um novo usu√°rio no sistema.\n\n**Roles dispon√≠veis:**\n- `DOCTOR` - M√©dico\n- `NURSE` - Enfermeiro\n\n**Exemplo de resposta:**\n```json\n{\n    \"id\": 1,\n    \"name\": \"Dr. Jo√£o Silva\",\n    \"username\": \"joao.silva\",\n    \"role\": \"DOCTOR\",\n    \"createdAt\": \"2023-01-01T10:00:00Z\"\n}\n```"
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('jwt_token', response.token);",
									"    pm.test('Login realizado com sucesso', function () {",
									"        pm.expect(response.token).to.not.be.undefined;",
									"        pm.expect(response.username).to.not.be.undefined;",
									"    });",
									"    console.log('‚úÖ Login realizado com sucesso para:', response.username);",
									"    console.log('üîë Token JWT salvo nas vari√°veis de ambiente');",
									"} else {",
									"    console.log('‚ùå Erro no login:', pm.response.text());",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"joao.silva\",\n    \"password\": \"senha123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Autentica o usu√°rio e retorna um token JWT.\n\n**Exemplo de resposta:**\n```json\n{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n    \"username\": \"joao.silva\",\n    \"name\": \"Dr. Jo√£o Silva\",\n    \"role\": \"DOCTOR\",\n    \"expiresAt\": \"2023-01-01T11:00:00Z\"\n}\n```\n\n‚ö†Ô∏è **Importante:** O token √© automaticamente salvo na vari√°vel de ambiente `jwt_token` para uso nos pr√≥ximos requests."
					},
					"response": []
				}
			],
			"description": "Endpoints para autentica√ß√£o e registro de usu√°rios no sistema."
		},
		{
			"name": "üè• Triagem Cl√≠nica",
			"item": [
				{
					"name": "An√°lise de Triagem - Caso Emergencial (Vermelho)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.test('An√°lise realizada com sucesso', function () {",
									"        pm.expect(response.analysisId).to.not.be.undefined;",
									"        pm.expect(response.patientName).to.not.be.undefined;",
									"        pm.expect(response.classification).to.not.be.undefined;",
									"    });",
									"    console.log('üè• An√°lise conclu√≠da para:', response.patientName);",
									"    console.log('üö® Classifica√ß√£o:', response.classification?.recommendedClassification);",
									"    console.log('‚è±Ô∏è Tempo recomendado:', response.timeRecommendation);",
									"} else {",
									"    console.log('‚ùå Erro na an√°lise:', pm.response.text());",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patientName\": \"Maria Santos\",\n    \"age\": 65,\n    \"gender\": \"Feminino\",\n    \"temperature\": 39.2,\n    \"heartRate\": 120,\n    \"respiratoryRate\": 28,\n    \"bloodPressureSystolic\": 80,\n    \"bloodPressureDiastolic\": 50,\n    \"oxygenSaturation\": 88,\n    \"painScale\": 9,\n    \"chiefComplaint\": \"Dor no peito e falta de ar\",\n    \"symptomDescription\": \"Dor intensa no peito tipo aperto, irradiando para bra√ßo esquerdo, acompanhada de falta de ar severa e sudorese\",\n    \"symptomDuration\": \"2 horas\",\n    \"symptomProgressionWorsening\": true,\n    \"comorbidities\": [\"Diabetes\", \"Hipertens√£o\", \"Doen√ßa Arterial Coronariana\"],\n    \"currentMedications\": [\"Metformina\", \"Losartana\", \"AAS\"],\n    \"allergies\": [\"Penicilina\"],\n    \"immunosuppressed\": false,\n    \"pregnant\": false,\n    \"recentSurgery\": false,\n    \"anticoagulantUse\": true,\n    \"additionalNotes\": \"Paciente com hist√≥rico de infarto h√° 2 anos. Chegou em cadeira de rodas, muito agitada e com dor intensa.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/triage",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"triage"
							]
						},
						"description": "An√°lise de triagem para um caso **EMERGENCIAL** (classifica√ß√£o vermelha).\n\n**Caracter√≠sticas do caso:**\n- üî¥ **Paciente**: Mulher, 65 anos\n- üö® **Sintomas**: Dor no peito + dispneia severa\n- ‚ö†Ô∏è **Sinais vitais alterados**: Hipotens√£o, taquicardia, febre alta\n- üìã **Comorbidades**: Diabetes, hipertens√£o, DAC\n- üíä **Anticoagulante**: Em uso\n\n**Expectativa:** Classifica√ß√£o VERMELHA com atendimento imediato."
					},
					"response": []
				},
				{
					"name": "An√°lise de Triagem - Caso Urgente (Amarelo)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.test('An√°lise realizada com sucesso', function () {",
									"        pm.expect(response.analysisId).to.not.be.undefined;",
									"        pm.expect(response.patientName).to.not.be.undefined;",
									"        pm.expect(response.classification).to.not.be.undefined;",
									"    });",
									"    console.log('üè• An√°lise conclu√≠da para:', response.patientName);",
									"    console.log('üü° Classifica√ß√£o:', response.classification?.recommendedClassification);",
									"    console.log('‚è±Ô∏è Tempo recomendado:', response.timeRecommendation);",
									"} else {",
									"    console.log('‚ùå Erro na an√°lise:', pm.response.text());",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patientName\": \"Carlos Oliveira\",\n    \"age\": 45,\n    \"gender\": \"Masculino\",\n    \"temperature\": 38.5,\n    \"heartRate\": 95,\n    \"respiratoryRate\": 20,\n    \"bloodPressureSystolic\": 140,\n    \"bloodPressureDiastolic\": 90,\n    \"oxygenSaturation\": 96,\n    \"painScale\": 7,\n    \"chiefComplaint\": \"Dor abdominal intensa\",\n    \"symptomDescription\": \"Dor intensa no abdome, lado direito, que come√ßou ao redor do umbigo e migrou\",\n    \"symptomDuration\": \"6 horas\",\n    \"symptomProgressionWorsening\": true,\n    \"comorbidities\": [],\n    \"currentMedications\": [],\n    \"allergies\": [],\n    \"immunosuppressed\": false,\n    \"pregnant\": false,\n    \"recentSurgery\": false,\n    \"anticoagulantUse\": false,\n    \"additionalNotes\": \"Paciente refere n√°useas e v√¥mitos. Dor piorou significativamente nas √∫ltimas 2 horas.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/triage",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"triage"
							]
						},
						"description": "An√°lise de triagem para um caso **URGENTE** (classifica√ß√£o amarela).\n\n**Caracter√≠sticas do caso:**\n- üü° **Paciente**: Homem, 45 anos\n- ü©∫ **Sintomas**: Dor abdominal migrat√≥ria (suspeita apendicite)\n- üìà **Progress√£o**: Sintomas piorando\n- üå°Ô∏è **Febre**: Presente (38.5¬∞C)\n- üìã **Sem comorbidades relevantes**\n\n**Expectativa:** Classifica√ß√£o AMARELA com avalia√ß√£o em at√© 1 hora."
					},
					"response": []
				},
				{
					"name": "An√°lise de Triagem - Caso Eletivo (Verde)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.test('An√°lise realizada com sucesso', function () {",
									"        pm.expect(response.analysisId).to.not.be.undefined;",
									"        pm.expect(response.patientName).to.not.be.undefined;",
									"        pm.expect(response.classification).to.not.be.undefined;",
									"    });",
									"    console.log('üè• An√°lise conclu√≠da para:', response.patientName);",
									"    console.log('üü¢ Classifica√ß√£o:', response.classification?.recommendedClassification);",
									"    console.log('‚è±Ô∏è Tempo recomendado:', response.timeRecommendation);",
									"} else {",
									"    console.log('‚ùå Erro na an√°lise:', pm.response.text());",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patientName\": \"Ana Costa\",\n    \"age\": 28,\n    \"gender\": \"Feminino\",\n    \"temperature\": 36.8,\n    \"heartRate\": 75,\n    \"respiratoryRate\": 16,\n    \"bloodPressureSystolic\": 120,\n    \"bloodPressureDiastolic\": 80,\n    \"oxygenSaturation\": 98,\n    \"painScale\": 3,\n    \"chiefComplaint\": \"Dor de cabe√ßa leve\",\n    \"symptomDescription\": \"Dor de cabe√ßa leve e intermitente, sem outros sintomas associados\",\n    \"symptomDuration\": \"3 dias\",\n    \"symptomProgressionWorsening\": false,\n    \"comorbidities\": [],\n    \"currentMedications\": [],\n    \"allergies\": [],\n    \"immunosuppressed\": false,\n    \"pregnant\": false,\n    \"recentSurgery\": false,\n    \"anticoagulantUse\": false,\n    \"additionalNotes\": \"Paciente jovem, sem sintomas graves. Busca orienta√ß√£o m√©dica por precau√ß√£o.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/triage",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"triage"
							]
						},
						"description": "An√°lise de triagem para um caso **ELETIVO** (classifica√ß√£o verde).\n\n**Caracter√≠sticas do caso:**\n- üü¢ **Paciente**: Mulher jovem, 28 anos\n- ü©∫ **Sintomas**: Cefaleia leve, sem piora\n- üìä **Sinais vitais**: Todos normais\n- üìã **Sem comorbidades**\n- ‚úÖ **Quadro est√°vel**\n\n**Expectativa:** Classifica√ß√£o VERDE com atendimento em at√© 4 horas."
					},
					"response": []
				},
				{
					"name": "An√°lise de Triagem - Caso Pedi√°trico",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.test('An√°lise realizada com sucesso', function () {",
									"        pm.expect(response.analysisId).to.not.be.undefined;",
									"        pm.expect(response.patientName).to.not.be.undefined;",
									"        pm.expect(response.classification).to.not.be.undefined;",
									"    });",
									"    console.log('üè• An√°lise conclu√≠da para:', response.patientName);",
									"    console.log('üë∂ Caso pedi√°trico - Classifica√ß√£o:', response.classification?.recommendedClassification);",
									"    console.log('‚è±Ô∏è Tempo recomendado:', response.timeRecommendation);",
									"} else {",
									"    console.log('‚ùå Erro na an√°lise:', pm.response.text());",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patientName\": \"Pedro Silva\",\n    \"age\": 8,\n    \"gender\": \"Masculino\",\n    \"temperature\": 39.5,\n    \"heartRate\": 130,\n    \"respiratoryRate\": 24,\n    \"bloodPressureSystolic\": 95,\n    \"bloodPressureDiastolic\": 60,\n    \"oxygenSaturation\": 97,\n    \"painScale\": 6,\n    \"chiefComplaint\": \"Febre alta e mal estar\",\n    \"symptomDescription\": \"Febre alta h√° 1 dia, irritabilidade, recusa alimentar, sonol√™ncia\",\n    \"symptomDuration\": \"24 horas\",\n    \"symptomProgressionWorsening\": true,\n    \"comorbidities\": [],\n    \"currentMedications\": [\"Dipirona\"],\n    \"allergies\": [],\n    \"immunosuppressed\": false,\n    \"pregnant\": false,\n    \"recentSurgery\": false,\n    \"anticoagulantUse\": false,\n    \"additionalNotes\": \"Crian√ßa de 8 anos, trazida pela m√£e. Febre n√£o cede completamente com antit√©rmico. Crian√ßa sonolenta mas responsiva.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/triage",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"triage"
							]
						},
						"description": "An√°lise de triagem para um caso **PEDI√ÅTRICO**.\n\n**Caracter√≠sticas do caso:**\n- üë∂ **Paciente**: Crian√ßa, 8 anos\n- üå°Ô∏è **Febre alta**: 39.5¬∞C persistente\n- üò¥ **Sintomas**: Irritabilidade, sonol√™ncia\n- üìà **Piora**: Sintomas piorando\n- ‚ö†Ô∏è **Aten√ß√£o especial**: Paciente pedi√°trico requer cuidado especial\n\n**Expectativa:** Classifica√ß√£o mais conservadora devido √† idade."
					},
					"response": []
				},
				{
					"name": "An√°lise de Triagem - Caso Obst√©trico",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.test('An√°lise realizada com sucesso', function () {",
									"        pm.expect(response.analysisId).to.not.be.undefined;",
									"        pm.expect(response.patientName).to.not.be.undefined;",
									"        pm.expect(response.classification).to.not.be.undefined;",
									"    });",
									"    console.log('üè• An√°lise conclu√≠da para:', response.patientName);",
									"    console.log('ü§∞ Caso obst√©trico - Classifica√ß√£o:', response.classification?.recommendedClassification);",
									"    console.log('‚è±Ô∏è Tempo recomendado:', response.timeRecommendation);",
									"} else {",
									"    console.log('‚ùå Erro na an√°lise:', pm.response.text());",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"patientName\": \"Fernanda Lima\",\n    \"age\": 32,\n    \"gender\": \"Feminino\",\n    \"temperature\": 37.2,\n    \"heartRate\": 95,\n    \"respiratoryRate\": 18,\n    \"bloodPressureSystolic\": 150,\n    \"bloodPressureDiastolic\": 95,\n    \"oxygenSaturation\": 98,\n    \"painScale\": 4,\n    \"chiefComplaint\": \"Dor de cabe√ßa e vis√£o emba√ßada\",\n    \"symptomDescription\": \"Dor de cabe√ßa forte, vis√£o emba√ßada e incha√ßo nas m√£os e p√©s\",\n    \"symptomDuration\": \"2 dias\",\n    \"symptomProgressionWorsening\": true,\n    \"comorbidities\": [],\n    \"currentMedications\": [\"√Åcido f√≥lico\", \"Ferro\"],\n    \"allergies\": [],\n    \"immunosuppressed\": false,\n    \"pregnant\": true,\n    \"gestationalWeek\": 34,\n    \"recentSurgery\": false,\n    \"anticoagulantUse\": false,\n    \"additionalNotes\": \"Gestante de 34 semanas, com suspeita de pr√©-ecl√¢mpsia. Acompanhada pelo marido, muito preocupada.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/triage",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"triage"
							]
						},
						"description": "An√°lise de triagem para um caso **OBST√âTRICO**.\n\n**Caracter√≠sticas do caso:**\n- ü§∞ **Paciente**: Gestante, 32 anos, 34 semanas\n- ü©∫ **Sintomas**: Cefaleia + vis√£o turva + edema\n- üî¥ **Suspeita**: Pr√©-ecl√¢mpsia\n- üìä **PA elevada**: 150/95 mmHg\n- ‚ö†Ô∏è **Alto risco**: Gesta√ß√£o avan√ßada + hipertens√£o\n\n**Expectativa:** Classifica√ß√£o de alta prioridade devido ao risco materno-fetal."
					},
					"response": []
				}
			],
			"description": "Endpoints para an√°lise de triagem cl√≠nica utilizando IA.\n\n**ü§ñ Intelig√™ncia Artificial:**\n- An√°lise baseada no Protocolo de Manchester\n- Integra√ß√£o com Google Gemini AI\n- Classifica√ß√£o autom√°tica de risco\n- Suporte √† decis√£o cl√≠nica\n\n**üè• Classifica√ß√µes:**\n- üî¥ **VERMELHO** (Emergencial): <15 min\n- üü° **AMARELO** (Urgente): <1 hora  \n- üü¢ **VERDE** (Eletivo): <4 horas"
		},
		{
			"name": "üìä Monitoramento",
			"item": [
				{
					"name": "Health Check - API Gateway",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('API Gateway est√° funcionando', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    console.log('‚úÖ API Gateway: Funcionando');",
									"} else {",
									"    console.log('‚ùå API Gateway: Com problemas');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/actuator/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"actuator",
								"health"
							]
						},
						"description": "Verifica o status de sa√∫de do API Gateway.\n\n**Retorna:**\n- Status dos servi√ßos\n- Conectividade com banco de dados\n- Status dos microservi√ßos"
					},
					"response": []
				},
				{
					"name": "Health Check - Auth Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Auth Service est√° funcionando', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    console.log('‚úÖ Auth Service: Funcionando');",
									"} else {",
									"    console.log('‚ùå Auth Service: Com problemas');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{auth_service_url}}/health",
							"host": [
								"{{auth_service_url}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Verifica o status de sa√∫de do Auth Service.\n\n**Endpoint direto:** Acesso direto ao servi√ßo de autentica√ß√£o."
					},
					"response": []
				},
				{
					"name": "Health Check - Clinical Engine",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Clinical Engine est√° funcionando', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    console.log('‚úÖ Clinical Engine: Funcionando');",
									"} else {",
									"    console.log('‚ùå Clinical Engine: Com problemas');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{clinical_engine_url}}/q/health",
							"host": [
								"{{clinical_engine_url}}"
							],
							"path": [
								"q",
								"health"
							]
						},
						"description": "Verifica o status de sa√∫de do Clinical Engine (Quarkus).\n\n**Endpoint direto:** Acesso direto ao servi√ßo de an√°lise cl√≠nica."
					},
					"response": []
				}
			],
			"description": "Endpoints para monitoramento da sa√∫de dos servi√ßos.\n\n**üîç Verifica√ß√µes:**\n- Status de funcionamento\n- Conectividade de rede\n- Sa√∫de do banco de dados\n- Disponibilidade da IA"
		},
		{
			"name": "üìö Documenta√ß√£o",
			"item": [
				{
					"name": "Swagger UI - Auth Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Swagger UI carregado', function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.text()).to.include('swagger');",
									"});",
									"",
									"console.log('üìñ Swagger UI do Auth Service dispon√≠vel');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{auth_service_url}}/swagger-ui.html",
							"host": [
								"{{auth_service_url}}"
							],
							"path": [
								"swagger-ui.html"
							]
						},
						"description": "Interface Swagger para documenta√ß√£o interativa do Auth Service.\n\n**Inclui:**\n- Endpoints de autentica√ß√£o\n- Schemas de request/response\n- Testes interativos"
					},
					"response": []
				},
				{
					"name": "OpenAPI Spec - Auth Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('OpenAPI spec dispon√≠vel', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    const spec = pm.response.json();",
									"    console.log('üìã OpenAPI spec carregado:', spec.info?.title);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{auth_service_url}}/v3/api-docs",
							"host": [
								"{{auth_service_url}}"
							],
							"path": [
								"v3",
								"api-docs"
							]
						},
						"description": "Especifica√ß√£o OpenAPI 3.0 do Auth Service em formato JSON."
					},
					"response": []
				},
				{
					"name": "Swagger UI - Clinical Engine",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Swagger UI carregado', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"console.log('üìñ Swagger UI do Clinical Engine dispon√≠vel');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{clinical_engine_url}}/swagger-ui",
							"host": [
								"{{clinical_engine_url}}"
							],
							"path": [
								"swagger-ui"
							]
						},
						"description": "Interface Swagger para documenta√ß√£o interativa do Clinical Engine.\n\n**Inclui:**\n- Endpoint de triagem\n- Par√¢metros de entrada\n- Exemplos de resposta"
					},
					"response": []
				}
			],
			"description": "Endpoints para acessar a documenta√ß√£o interativa das APIs.\n\n**üìñ Documenta√ß√£o:**\n- Swagger UI interativo\n- Especifica√ß√µes OpenAPI\n- Schemas e exemplos"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-configure base URLs if not set",
					"if (!pm.environment.get('base_url')) {",
					"    pm.environment.set('base_url', 'http://localhost:8080');",
					"}",
					"if (!pm.environment.get('auth_service_url')) {",
					"    pm.environment.set('auth_service_url', 'http://localhost:8081');",
					"}",
					"if (!pm.environment.get('clinical_engine_url')) {",
					"    pm.environment.set('clinical_engine_url', 'http://localhost:8082');",
					"}",
					"",
					"console.log('üîß Environment configured:');",
					"console.log('   API Gateway:', pm.environment.get('base_url'));",
					"console.log('   Auth Service:', pm.environment.get('auth_service_url'));",
					"console.log('   Clinical Engine:', pm.environment.get('clinical_engine_url'));"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global response logging",
					"if (pm.response.code >= 400) {",
					"    console.log('‚ùå Request failed:', pm.info.requestName);",
					"    console.log('   Status:', pm.response.code, pm.response.status);",
					"    console.log('   Response:', pm.response.text());",
					"} else {",
					"    console.log('‚úÖ Request successful:', pm.info.requestName);",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "auth_service_url",
			"value": "http://localhost:8081",
			"type": "string"
		},
		{
			"key": "clinical_engine_url",
			"value": "http://localhost:8082",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		}
	]
}

